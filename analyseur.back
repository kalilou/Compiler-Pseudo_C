#include <stdio.h>
#include "analyseur.h"

/* 
 DECL : idf TYPE CONST ';'
 TYPE : int | bool 
 CONST : nombre | true | false ;
*/

boolean _decl();
boolean _type();
boolean _const();
extern int yylex();

typetoken token ;

int main(int argc, char * argv){
	if (_decl() == true) printf("une declaration");
	else printf("une declaration pas correcte !!");
return 0;
}

// DECL : idf TYPE CONST ';'
boolean _decl() {
token = (typetoken) yylex();

if ( (token == IDF) ){ 
	if (_type() == true){
		if (_const()){
			token = (typetoken) yylex();
			if ( (token == PVIRG) )
				return true;
			else    return false;
		}else return false;
	}else    return false; 
}else return false;
}

// TYPE : int | bool ;
boolean _type() {
token = (typetoken) yylex();

if ( (token == INT) || (token == BOOL) ) return true;
else return false;
}

// CONST : nombre | true | false ; */
boolean _const() {
token = (typetoken) yylex();

if ( (token == NOMBRE) || (token == TRUE) || (token == FALSE) ) return true;
else return false;
}
